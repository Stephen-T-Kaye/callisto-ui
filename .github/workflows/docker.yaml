name: Docker
on:
  push:
    branches:
      - main
      - 'SK-**'
      - 'sk-**'

env:
  REGISTRY: ghcr.io/stephen-t-kaye
  IMAGE: callisto-ui

jobs:
  build-docker-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write

    env:
      NPM_AUTH_TOKEN: ${{ secrets.npm_auth_token }}
      VITE_KC_URL: "https://keycloak.callisto.localhost/auth" 
      VITE_KC_REALM: "callisto" 
      VITE_KC_CLIENTID: "callistoreactclient" 
      VITE_TIMECARD_API_URL: "https://timecard-restapi.callisto.localhost/"
      VITE_ACCRUALS_API_URL: "https://accruals-restapi.callisto.localhost/"
    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '16.15.0'
    - run: npm ci
    - run: npm run lint
    - run: npx stylelint "**/*.scss"
    - run: npm run test
    - run: npm run build --if-present

    - name: Calculate Docker Tag
      id: docker_tag
      run: |
        BRANCH=$(echo $GITHUB_REF_NAME | tr '[:lower:]' '[:upper:]') && [[ $BRANCH =~ (SK-[0-9]*) ]] && dockerTag=${match/#E/-E}${BASH_REMATCH/#E/-E}
        if [[ -n ${dockerTag} ]]; then
          echo "DOCKER_TAG=${dockerTag}" >> $GITHUB_OUTPUT
        elif [[ "$GITHUB_REF_NAME" == "main" ]]; then
          echo "DOCKER_TAG=latest" >> $GITHUB_OUTPUT
        fi

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push
      id: push
      uses: docker/build-push-action@v6
      with:
        context: ./
        file: dockerfile
        push: true
        tags: |
          ${{ env.REGISTRY }}/${{ env.IMAGE }}:${{ github.sha }}
          ${{ env.REGISTRY }}/${{ env.IMAGE }}:${{ steps.docker_tag.outputs.DOCKER_TAG }}

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE }}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true
